# Definition of countries and capital
countries = ['spain', 'france', 'germany', 'norway']
capitals = ['madrid', 'paris', 'berlin', 'oslo']

# Get index of 'germany': ind_ger
countries.index('germany')

#Create a dictionary
    my_dict = {
   "key1":"value1",
   "key2":"value2",
            }
# Print out the keys in europe
print(europe.keys())

# Add italy to europe
europe['italy']='rome'

# Print out italy in europe
print('italy' in europe) # True

# Remove australia
del(europe['australia'])

# Dictionary of dictionaries
europe = { 'spain': { 'capital':'madrid', 'population':46.77 },
           'france': { 'capital':'paris', 'population':66.03 },
           'germany': { 'capital':'berlin', 'population':80.62 },
           'norway': { 'capital':'oslo', 'population':5.084 } }


# Print out the capital of France
print(europe['france']['capital'])

# Create sub-dictionary data
data ={'capital':'rome','population':59.83}

# Add data to europe under key 'italy'
europe['italy']=data

################### Pandas
# Pre-defined lists
names = ['United States', 'Australia', 'Japan', 'India', 'Russia', 'Morocco', 'Egypt']
dr =  [True, False, False, False, True, True, True]
cpc = [809, 731, 588, 18, 200, 70, 45]

# Import pandas as pd
import pandas as pd

# Create dictionary my_dict with three key:value pairs: my_dict
my_dict={'country':names,'drives_right':dr,'cars_per_cap':cpc}

# Build a DataFrame cars from my_dict: cars
cars=pd.DataFrame(my_dict)

# Definition of row_labels
row_labels = ['US', 'AUS', 'JAP', 'IN', 'RU', 'MOR', 'EG']

# Specify row labels of cars
cars.index=row_labels

# Import the cars.csv as dataframe
cars=pd.read_csv('cars.csv')

# Import cars data
import pandas as pd
cars = pd.read_csv('cars.csv', index_col = 0)

# Print out country column as Pandas Series
cars['cars_per_cap']

# Print out country column as Pandas DataFrame
cars[['cars_per_cap']]

# Print out DataFrame with country and drives_right columns
cars[['country','drives_right']]

########### Usando loc(rowlabels) y iloc(index)
# Print out observation for Japan
cars.loc[['JAP']]

# Print out observations for Australia and Egypt
cars.loc[['AUS','EG']]

# Print out drives_right value of Morocco
print(cars.loc['MOR','drives_right'])

# Print sub-DataFrame
print(cars.loc[['RU','MOR'],['country','drives_right']])

